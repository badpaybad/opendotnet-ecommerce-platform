@using DomainDrivenDesign.Core
@model dynamic

@{
    ViewBag.Title = "User email messages";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

    Dictionary<short,string> listStatus=new Dictionary<short, string>();
    listStatus.Add((short)Enums.UserMessageTransactionStatus.Created, Enums.UserMessageTransactionStatus.Created.ToString());
    listStatus.Add((short)Enums.UserMessageTransactionStatus.Sent, Enums.UserMessageTransactionStatus.Sent.ToString());
    listStatus.Add((short)Enums.UserMessageTransactionStatus.ReSend, Enums.UserMessageTransactionStatus.ReSend.ToString());
    listStatus.Add((short)Enums.UserMessageTransactionStatus.Fail, Enums.UserMessageTransactionStatus.Fail.ToString());
}

<h2>User email messages</h2>
<input id="txtKeywords" placeholder="keywords"/> 
<select id="drlStatus">
    <option value="-1">Status</option>
   @foreach (var itm in listStatus)
   {
    <option value="@itm.Key">@itm.Value</option>
   }
</select>
<button id="btnSearch" onclick="UserEmailMessage.refresh()">Search</button>
<table id="tblView"></table>
@section scripts
{
    <script>
        UserEmailMessage = {
            _listStatus:[],
            _$tblView:$('#tblView'),
            init: function () {
                @foreach (var itm in listStatus)
                {
                    <text>UserEmailMessage._listStatus[@itm.Key]='@itm.Value'</text>
                }
                UserEmailMessage.initTable();
            },
            initTable:function() {
                UserEmailMessage._$tblView.bootstrapTable({
                    idField: 'Id',
                    method: 'post',
                    url: '/Admin/UserEmailMessage/List?__=' + (new Date().getTime()),
                    sidePagination: 'server',
                    pagination: true,
                    showToggle: false,
                    minimumCountColumns: 1,
                    pageSize: 10,
                    pageList: [10, 20, 50, 100, 200],
                    showColumns: false,
                    showRefresh: false,
                    sortName: 'CreatedDate',
                    sortOrder: 'desc',
                    queryParams: function(p) {
                        return {
                            sortField: p.sort,
                            orderBy: p.order,
                            take: p.limit,
                            skip: p.offset,
                            keyworeds: $('#txtKeywords').val() ,
                            status:$('#drlStatus').val()
                        };
                    },
                    columns: [
                        {
                            field: 'To',
                            title: 'ToEmail',
                            align: 'left',
                            valign: 'middle'
                        }, {
                            field: 'SendDate',
                            title: 'SendDate',
                            align: 'left',
                            valign: 'middle',
                            formatter: function (value, row) {
                                return Util.dateTimeFromJson( value);
                            }
                        }
                        , {
                            field: 'Subject',
                            title: 'Subject',
                            align: 'left',
                            valign: 'middle',
                            formatter: function (value, row) {
                                var temp = value;
                                temp += ' <a onclick="$(\'#content-'+row.Id+'\').show()"> show content</a>';
                                temp += '<div id="content-' + row.Id + '" style="display:none"><a onclick="$(\'#content-' + row.Id
                                    + '\').hide()">hide</a><br>' + row.Content + '</div>';
                                return temp;
                            }
                        }, {
                            field: 'Status',
                            title: 'Status',
                            align: 'left',
                            valign: 'middle',
                            formatter: function (value, row) {
                                var temp = UserEmailMessage._listStatus[value];
                                temp += '<br><a onclick="UserEmailMessage.resend(\'' + row.Id + '\')">Resend</a>';
                                return temp;
                            }
                        },
                        {
                            field: 'Error',
                            title: 'Logs',
                            align: 'left',
                            valign: 'middle',
                            formatter:function(value, row) {
                                return value.replace('\n', '<br>');
                            }
                        }
                    ]
                });
            },
            resend: function (id) {
                bootbox.confirm('Do you want to RESEND?',
                    function (result) {
                        if (!result) return;

                        $.post('/Admin/UserEmailMessage/Resend',
                                {
                                    id: id
                                })
                            .done(function (data) {
                                if (data.Ok) {
                                    toastr.success(data.Message);
                                    UserEmailMessage.refresh();
                                } else {
                                    toastr.error(data.Message);
                                }
                            }).fail(function () {
                                bootbox.alert({
                                    message: "Can not make request, check your internet and try to reload page",
                                    backdrop: true
                                });
                            });
                    });
            }
            ,refresh:function() {
                UserEmailMessage._$tblView.bootstrapTable('refresh');
            }
        }

        UserEmailMessage.init();
    </script>
}
